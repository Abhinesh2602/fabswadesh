<!-- Enhanced Quantity Selector Snippet -->
<div class="quantity-selector">
  <button type="button" class="quantity-btn quantity-decrease" aria-label="Decrease quantity">âˆ’</button>
  <input type="number" 
         id="{{ input_id | default: 'Quantity' }}" 
         name="{{ input_name | default: 'quantity' }}" 
         value="{{ initial_value | default: 1 }}" 
         min="{{ min_value | default: 1 }}" 
         {% if max_value %}max="{{ max_value }}"{% endif %}
         class="product-form__input product-form__quantity {{ input_class }}" 
         aria-label="{{ 'products.product.quantity' | t }}">
  <button type="button" class="quantity-btn quantity-increase" aria-label="Increase quantity">+</button>
</div>

<style>
  /* Enhanced Quantity Selector Styles */
  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid var(--g-input-border, #ddd);
    border-radius: var(--g-input-radius, 4px);
    background: white;
    overflow: hidden;
    width: 130px;
  }

  .quantity-btn {
    background: var(--g-input-bg, #f8f9fa);
    border: none;
    width: 40px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    color: var(--g-color-heading, #333);
    transition: background-color 0.2s, color 0.2s;
    user-select: none;
  }

  .quantity-btn:hover {
    background: var(--g-color-primary, #e9ecef);
    color: var(--g-cta-text, white);
  }

  .quantity-btn:active {
    transform: scale(0.95);
  }

  .quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: #f8f9fa;
    color: #6c757d;
  }

  .quantity-btn:disabled:hover {
    background: #f8f9fa;
    color: #6c757d;
    transform: none;
  }

  .product-form__quantity {
    border: none;
    width: 50px;
    height: 44px;
    text-align: center;
    font-size: 16px;
    font-weight: 500;
    background: white;
    outline: none;
    -moz-appearance: textfield;
    color: var(--g-color-heading, #333);
  }

  .product-form__quantity::-webkit-outer-spin-button,
  .product-form__quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .product-form__quantity:focus {
    background: var(--g-input-bg, #f8f9fa);
  }

  @media (max-width: 767px) {
    .quantity-selector {
      width: 120px;
    }
    
    .quantity-btn {
      width: 35px;
      height: 40px;
      font-size: 16px;
    }
    
    .product-form__quantity {
      width: 50px;
      height: 40px;
      font-size: 14px;
    }
  }
</style>

<script>
  // Enhanced Quantity Selector Functionality
  document.addEventListener('DOMContentLoaded', function() {
    const quantitySelectors = document.querySelectorAll('.quantity-selector');
    
    quantitySelectors.forEach(function(quantitySelector) {
      const decreaseBtn = quantitySelector.querySelector('.quantity-decrease');
      const increaseBtn = quantitySelector.querySelector('.quantity-increase');
      const quantityInput = quantitySelector.querySelector('.product-form__quantity');
      
      if (!decreaseBtn || !increaseBtn || !quantityInput) return;
      
      function updateQuantity(newValue) {
        const min = parseInt(quantityInput.getAttribute('min')) || 1;
        const max = parseInt(quantityInput.getAttribute('max')) || 999;
        
        newValue = Math.max(min, Math.min(max, newValue));
        quantityInput.value = newValue;
        
        // Update button states
        decreaseBtn.disabled = newValue <= min;
        increaseBtn.disabled = newValue >= max;
        
        // Trigger change event for any listeners
        quantityInput.dispatchEvent(new Event('change', { bubbles: true }));
      }
      
      // Decrease button click
      decreaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value) || 1;
        updateQuantity(currentValue - 1);
      });
      
      // Increase button click
      increaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value) || 1;
        updateQuantity(currentValue + 1);
      });
      
      // Input change validation
      quantityInput.addEventListener('input', function() {
        const value = parseInt(this.value) || 1;
        updateQuantity(value);
      });
      
      // Initialize button states
      updateQuantity(parseInt(quantityInput.value) || 1);
    });
  });
</script>
